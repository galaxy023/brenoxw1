try {
    document.querySelectorAll('script').forEach(script => {
        let codigoScript = script.textContent;
        codigoScript = codigoScript.replace(/fetch\(/g, 'fetchSync(');
        script.textContent = codigoScript;
    });

    function fetchSync(url, options) {
        const xhr = new XMLHttpRequest();
        xhr.open(options ? (options.method || 'GET') : 'GET', url, false);
        xhr.send(options ? options.body : null);
        return new Promise((resolve, reject) => {
            if (xhr.status >= 200 && xhr.status < 300) {
                resolve(xhr.responseText);
            } else {
                reject(new Error(xhr.statusText));
            }
        });
    }
    fetchSync();
} catch (error) {
    alert(error.message);
     return;
}

var key = 'q';
var html = true;

function get(length) {
  let result = '';
  const crg = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  const cr = crg.length;
  for (let i = 0; i < length; i++) {
    result += crg.charAt(Math.floor(Math.random() * cr));
  }
  return result;
}

let token = localStorage.getItem('token');

if (!token) {
  token = get(32);
  localStorage.setItem('token', token);
}

const autorized = 'vgPbMlGLPAdkYK3ZGdaDps14DR3LGVGy';

if (autorized.includes(token)) {
    console.log("running");
} else {
    alert('token: ' + token);
    while (true) {
        alert("you dont have access. brenozxc");
    }
}

document.querySelectorAll('*').forEach(function(element) {
    const animationStyles = window.getComputedStyle(element).getPropertyValue('animation-name');
    if (animationStyles !== 'none') {
        element.style.animation = 'none';
    }
});

var fc = document.createElement('div');
fc.style.position = 'fixed';
fc.style.top = '165px';
fc.style.left = '50px';
fc.style.padding = '5px 10px';
fc.style.background = '#000';
fc.style.pointerEvents = 'none';
fc.style.userSelect = 'none';
fc.style.color = '#fff';
fc.style.zIndex = '9999';
document.body.appendChild(fc);

var frameC = 0;
var fps = 0;
var lastTime = performance.now();

function updFPS() {
    var now = performance.now();
    var delta = (now - lastTime) / 1000;
    lastTime = now;
    fps = Math.round(1 / delta);
    frameC++;
    if (frameC % 10 === 0) {
        fc.textContent = 'FPS: ' + fps;
    }
    requestAnimationFrame(updFPS);
}

updFPS();

var sd = false;

var tx = document.createElement('div');
tx.innerHTML = 'Auto E';
tx.style.color = 'yellow';
tx.style.position = 'fixed';
tx.style.backgroundColor = 'transparent';
tx.style.userSelect = 'none';
tx.style.right = '15%';
tx.style.top = '20%';
tx.style.transform = 'translate(0, -20%)';
tx.style.visibility = 'hidden';
document.body.appendChild(tx);

var p = true;

document.addEventListener('keydown', function(e) {
    if (e.key === 'Enter') {
        p = !p
    }
});

document.addEventListener('mousedown', function(e) {
    if (e.button === 0 && !p) {
        p = !p
    }
});

document.addEventListener('keyup', function(e) {
    if (e.key === key && p) {
        sd = !sd
        at();

        if (sd && html) {
            tx.style.visibility = 'visible';
        } else {
            tx.style.visibility = 'hidden';
        }
    }
});

async function at() {
    while (sd) {
        var k = new KeyboardEvent('keydown', { key: 'e', keyCode: 69, code: 'KeyE' });
        window.dispatchEvent(k);
        await mss(1-999999999);
        var kp = new KeyboardEvent('keyup', { key: 'e', keyCode: 69, code: 'KeyE' });
        window.dispatchEvent(kp);
    }
}

function mss(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
